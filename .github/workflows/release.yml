name: Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: wasm32-unknown-unknown
        override: true

    - name: Install wasm-pack
      uses: jetli/wasm-pack-action@v0.4.0
      with:
        version: latest

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: wasm-pack build

    - name: Run tests
      run: wasm-pack test --firefox --headless
      env:
        RUST_BACKTRACE: 1

    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Create release assets
      run: |
        # Create a zip file with the pkg directory contents
        cd pkg
        zip -r ../opfs-project-${{ steps.version.outputs.version }}.zip .
        cd ..
        echo "Created release asset: opfs-project-${{ steps.version.outputs.version }}.zip"

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./opfs-project-${{ steps.version.outputs.version }}.zip
        asset_name: opfs-project-${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip

    - name: Update Cargo.toml version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        echo "Updating Cargo.toml version to: $VERSION"
        # Update version in Cargo.toml
        sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
        echo "Updated Cargo.toml:"
        grep '^version = ' Cargo.toml

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
